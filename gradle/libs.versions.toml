[versions]

kotlin = "1.9.10"
dokka = "1.9.0"
detekt = "1.23.1"
sonarqubeGradlePlugin = "4.4.0.3356"
jacoco = "0.8.10"
compose = "1.5.2"
destinations = "1.9.53"
#Testing
mockmp = "1.15.0"
mockk = "1.13.8"
junit = "5.10.0"
kotest = "5.7.2"
assertk-jvm = "0.27.0"
owasp = "8.4.0"
asciidoctor = "4.0.0-alpha.1"
gradle-git-properties = "2.4.1"
docker-plugin = "9.3.3"
# Utilities
apache-commons = "1.10.0"
kotlin-logging = "3.0.5"


[libraries]
# project dependencies

# Gradle Plugins
gradle-android = { module = "com.android.tools.build:gradle", version = "8.1.1" }
gradle-complete-kotlin = { module = "com.louiscad.complete-kotlin:plugin", version = "1.1.0" }
gradle-kover = { module = "org.jetbrains.kotlinx:kover-gradle-plugin", version = "0.7.3" }
gradle-sentry = { module = "io.sentry:sentry-android-gradle-plugin", version = "3.12.0" }
gradle-buildconfig = { module = "com.github.gmazzo.buildconfig:plugin", version = "4.1.2" }
gradle-kotest = { module = "io.kotest:kotest-framework-multiplatform-plugin-gradle", version.ref = "kotest" }
gradle-ksp = { module = "com.google.devtools.ksp:symbol-processing-gradle-plugin", version = "1.9.10-1.0.13" }
gradle-compose = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "compose" }
gradle-mockmp = { module = "org.kodein.mock:mockmp-gradle-plugin", version.ref = "mockmp" }
gradle-updates = { module = "com.github.ben-manes:gradle-versions-plugin", version = "0.48.0" }
gradle-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-allopen = { module = "org.jetbrains.kotlin:kotlin-allopen", version.ref = "kotlin" }
kotlin-noarg = { module = "org.jetbrains.kotlin:kotlin-noarg", version.ref = "kotlin" }
gradle-dokka = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }
gradle-git-properties = { module = "com.gorylenko.gradle-git-properties:gradle-git-properties", version.ref = "gradle-git-properties" }
gradle-sonarqube = { module = "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin", version.ref = "sonarqubeGradlePlugin" }

# Detekt
gradle-detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
detekt-compose = { module = "io.nlopez.compose.rules:detekt", version = "0.3.0" }
detekt-compose2 = { module = "ru.kode:detekt-rules-compose", version = "1.3.0" }
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }

# Destiantions
destinations = { module = "io.github.raamcosta.compose-destinations:animations-core", version.ref = "destinations" }
destinations-compiler = { module = "io.github.raamcosta.compose-destinations:ksp", version.ref = "destinations" }
# Kamel
kamel = { module = "media.kamel:kamel-image", version = "0.7.3" }
# YAML
yamlbeans = { module = "com.esotericsoftware.yamlbeans:yamlbeans", version = "1.15" }

# Utils
gradle-owasp-depcheck = { module = "org.owasp:dependency-check-gradle", version.ref = "owasp" }
gradle-asciidoctor = { module = "org.asciidoctor:asciidoctor-gradle-jvm", version.ref = "asciidoctor" }
gradle-docker-plugin = { module = "com.bmuschko:gradle-docker-plugin", version.ref = "docker-plugin" }

# Utilities
commons-text = { module = "org.apache.commons:commons-text", version.ref = "apache-commons" }
kotlin-logging = { module = "io.github.microutils:kotlin-logging", version.ref = "kotlin-logging" }

# test dependencies
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
jacoco-core = { module = "org.jacoco:org.jacoco.core", version.ref = "jacoco" }
kotest-assertions-core-jvm = { module = "io.kotest:kotest-assertions-core-jvm", version.ref = "kotest" }
kotest-assertions-json = { module = "io.kotest:kotest-assertions-json", version.ref = "kotest" }
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
assertk-jvm = { module = "com.willowtreeapps.assertk:assertk-jvm", version.ref = "assertk-jvm" }


[bundles]

junit = ["junit-jupiter-api", "junit-jupiter-engine"]
kotest = ["kotest-assertions-core-jvm", "kotest-assertions-json", "kotest-runner-junit5"]
ui-common = [
    "kamel"
]
ui-android = []
ui-ios = []
ui-common-test = []
ui-android-test = []
ui-ios-test = []
ui-common-ksp = []
ui-android-ksp = [
    "destinations-compiler",
]
ui-ios-ksp = []

[plugins]
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
detekt-gradle = { id = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
