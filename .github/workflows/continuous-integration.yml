name: CI Build

on: [ push ]

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

env:
    TZ: UTC
    BOT_TOKEN: ${{ secrets.BOT_TOKEN }}

permissions:
    contents: write
    pull-requests: write

jobs:
    validation:
        name: Validation
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses:  actions/checkout@v4
                with:
                    fetch-depth: 0
            -   name: Validate Gradle wrapper
                uses: gradle/wrapper-validation-action@v1.1.0
    compile:
        name: Assembling
        runs-on: ubuntu-latest
        if: github.event_name == 'pull_request'
        steps:
            - name: Checkout
              uses:  actions/checkout@v4
              with:
                  fetch-depth: 0
            - name: ⚙️ Common Steps for all jobs
              uses: ./.github/actions/common-steps
            - name: 🛠️Assemble Application
              run: ./gradlew assembleDebug --no-daemon --scan --stacktrace
            - name: 🟢⬆️ Upload compose reports artifact
              uses: actions/upload-artifact@v3.1.3
              if: always()
              with:
                  name: compose-reports
                  path: |
                      **/build/compose-metrics
                      **/build/compose-reports
                  retention-days: 7
            - name: 🟢⬆️Upload Android APK
              uses: rnkdsh/action-upload-diawi@v1.5.2
              id: diawi_android
              with:
                  token: ${{ secrets.DIAWI_TOKEN }}
                  file: apps/androidApp/build/outputs/apk/debug/androidApp-debug.apk
            - name: Post comment with Diawi link
              uses: peter-evans/create-or-update-comment@v3.0.2
              with:
                  issue-number: ${{ github.event.pull_request.number }}
                  body: |
                      | Android                                       | iOS      |
                      |:---------------------------------------------:|:--------:|
                      | [Download APK (v${{ github.run_number }})][1] | Not yet. |
                      | ![2]                                          | Not yet. |

                      [1]: ${{ steps.diawi_android.outputs.url }}
                      [2]: https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=${{ steps.diawi_android.outputs.url }}


    tests:
        name: Tests
        needs: compile
        runs-on: ubuntu-latest

        steps:
            -   name: 🔍 BOT_TOKEN
                if: env.BOT_TOKEN == ''
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                run: echo "BOT_TOKEN=${GITHUB_TOKEN}" >> $GITHUB_ENV
            -   name: 🔄 Checkout
                uses: actions/checkout@v4
                with:
                    fetch-depth: 0
                    token: ${{ env.BOT_TOKEN }}
            -   name: ⚙️ Common Steps for all jobs
                uses: ./.github/actions/common-steps
            -   name: 🧪 Run tests
                run: ./gradlew clean check sonar aggregateReports --scan
                env:
                    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            -   name: 🟡 Add build scan URL as PR comment
                uses: actions/github-script@v6
                if: github.event_name == 'pull_request' && failure()
                with:
                    github-token: ${{env.BOT_TOKEN}}
                    script: |
                        github.rest.issues.createComment({
                          issue_number: context.issue.number,
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          body: '❌ ${{ github.workflow }} failed: ${{ steps.gradle.outputs.build-scan-url }}'
                        })
            -   name: 💫 Generate JaCoCo Badge
                uses: cicirello/jacoco-badge-generator@v2
                with:
                    generate-branches-badge: true
                    jacoco-csv-file: build/reports/jacoco/aggregateJacocoTestReport/aggregateJacocoTestReport.csv

            -   name: 📄 Log coverage percentage
                run: |
                    echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
                    echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

            -   name: ❇️Commit and push the badge (if it changed)
                if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' && github.event.head_commit.author.username != 'github-actions'
                uses: EndBug/add-and-commit@v9
                with:
                    default_author: github_actions
                    message: 'commit badge 🍀 ${{ steps.jacoco.outputs.coverage }} %'
                    github_token: ${{ env.BOT_TOKEN }}
            -   name: 📑 Upload documentation results
                uses: actions/upload-artifact@v3
                with:
                    name: documentation
                    path: build/documentation

    security:
        name: 🔒Security Checks
        runs-on: ubuntu-latest

        steps:
            -   name: 🔄 Checkout
                uses: actions/checkout@v4
                with:
                    fetch-depth: 0

            -   name: ⚙️ Common Steps for all jobs
                uses: ./.github/actions/common-steps

            -   name: 🛡️Check OWASP
                run: ./gradlew clean dependencyCheckAnalyze
            -   name: ️🛡️⬆️ Upload owasp-report results
                uses: actions/upload-artifact@v3
                with:
                    name: owasp-reports
                    path: build/reports/owasp
            -   name: 🏗️ 📦 Build package
                run: ./gradlew clean assemble dockerCreateDockerfile -x test -x integrationTest
            -   name: 🏗️ 🐳 Build Container Image
                uses: docker/build-push-action@v5
                with:
                    context: ./apps/app/build/docker/
                    file: ./apps/app/build/docker/Dockerfile
                    push: false
                    tags: n4t5u/yacosta738/kmp-template:latest
            -   name: 🔍 🪪 Scan container using trivy
                id: scan
                uses: azure/container-scan@v0
                with:
                    image-name: n4t5u/yacosta738/kmp-template:latest

    release:
        name: 🚀 Release
        needs: [ tests, security ]
        if: github.ref == 'refs/heads/main'
        runs-on: ubuntu-latest

        steps:
            -   name: 🔄 Checkout
                uses: actions/checkout@v4
                with:
                    fetch-depth: 0

            -   name: ⚙️ Common Steps for all jobs
                uses: ./.github/actions/common-steps

            -   name: 🏗️ 📦 Build package
                run: ./gradlew assemble --scan -x test -x integrationTest
            -   name: 🟢 Setup Node.js
                uses: actions/setup-node@v3
                with:
                    node-version: 'lts/*'
            -   name: 🧩 Add plugin for conventional commits
                run: npm install conventional-changelog-conventionalcommits @semantic-release/exec
                working-directory: ./.github/workflows
            -   name: 🚀 🟣 Release to GitHub
                working-directory: ./.github/workflows
                run: npx semantic-release
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        outputs:
            revnumber: ${{ env.revnumber }}

    build-publish-docker:
        name: 🚢 🐳 Build and Publish Docker Image
        needs: release
        runs-on: ubuntu-latest

        steps:
            -   name: 🔄 Checkout
                uses: actions/checkout@v4

            -   name: ⚙️ Common Steps for all jobs
                uses: ./.github/actions/common-steps

            -   name: 🏗️ 📦 Build package
                run: ./gradlew clean assemble dockerCreateDockerfile -x test -x integrationTest

            -   name: 🎯 Set up QEMU
                uses: docker/setup-qemu-action@v3
            -   name: 🎯 Set up Docker Buildx
                uses: docker/setup-buildx-action@v3
            -   name: Login to Docker Hub
                uses: docker/login-action@v3
                with:
                    username: ${{ secrets.DOCKERHUB_USERNAME }}
                    password: ${{ secrets.DOCKERHUB_TOKEN }}
            -   name: 🏗️ Build and push
                uses: docker/build-push-action@v5
                with:
                    context: ./apps/app/build/docker/
                    file: ./apps/app/build/docker/Dockerfile
                    push: true
                    tags: |
                        n4t5u/kmp-template:latest
                        n4t5u/kmp-template:${{ needs.release.outputs.revnumber }}

    publish-docs:
        name: 🔵 📄 Publish Docs
        needs: release
        runs-on: ubuntu-latest

        steps:
            -   name: 🔄 Checkout
                uses: actions/checkout@v4
                with:
                    fetch-depth: 0
            -   name: ⚙️ Common Steps for all jobs
                uses: ./.github/actions/common-steps
            -   name: ⬇️ 📜 Download documentation reports
                uses: actions/download-artifact@v3
                with:
                    name: documentation
                    path: build/documentation
            -   name: ⬇️ 🛡️ Download owasp reports
                uses: actions/download-artifact@v3
                with:
                    name: owasp-reports
                    path: build/reports/owasp
            -   name: 📚 Aggregate Documentation
                run: ./gradlew aggregateDocumentation
                env:
                    revnumber: ${{ needs.release.outputs.revnumber }}
            -   name: 🟢 📚 Publish documentation
                uses: JamesIves/github-pages-deploy-action@v4.4.3
                with:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    BRANCH: gh-pages
                    FOLDER: build/documentation
                    CLEAN: true
